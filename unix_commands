Useful commands for unix


## less ##
less -S somefile # do not wrap lines

## column ##
column -t -s '  ' somefile | less  # view as tab delimited table 

## word count ##
wc -m # count characters in string

## awk ##
awk -F: '$3>1000 inputfile # extract specific values from file

## Find ##
find /dir_to_search/*pattern* -type f ! -size 0 # Find non empty files matching pattern in directory

## sed ##
sed 's/\.[0-9]//g' # Remove isoform information from gene identifier (Cc047653.1 -> Cc047653)

sed -i s/^/string/ file # add string to start of every line in file

sed -i s/$/string/ file # add string to end of every line in file

## grep ##

grep '\<string\>' file # extract lines matching exact string

grep -E 'pattern[[:alnum:]]' file.txt # extract lines mathcing pattern with different alphanumeric character as last character

grep -wFf file1 file2  # grep with file and only print lines with the exact match (useful for transcript/gene ids to only extract the specific ids and not strings that contain the pattern)

grep 'pattern[ABC]' file1 # grep lines that matches the string patternA, patternB and patternC


### FASTA ###

# Convert multiline fasta to single line
awk '!/^>/ { printf "%s", $0; n = "\n" } /^>/ { print n $0; n = "" } END { printf "%s", n }' sample1.fa > sample1_singleline.fa

# Get the length of a fasta sequence (must be single line)
cat sample1_singleline.fa | awk 'NR%2==0' | awk '{print length($1)}'

# Format back to multiline FASTA. Header needs to be shorter than 60 characters (or increase fold value)
tr "\t" "\n" < linearized.fa | fold -w 60 > multiline.fasta 

# Calculate sequence lengths using bioawk
bioawk -c fastx '{print $name, length($seq)}' input.fasta 
